All right, in our last lecture, we actually tried doing a simple Stubing using the Sirat intercept,
using the fixator data, something like this, and it was working fine as expected.
But now what we're going to do is we're going to do some additional operation or a different way of
actually intercepting.
And we can also see what response that you are looking for.
You can actually show that response as well instead of just showing the example Dages on file.
I mean, I can show you the different ways as well.
So this is probably going to be the very one which we're going to come and do so that you will have
this code while you actually work with it.
So I'm going to do a way, too, of doing that as well so that it will be more easier for you to follow
along.
So for doing that, I'm just going to do a Seida intercept where so you can either give the full you
are little something like this, or you can also give the users, which can also do the same thing,
pretty much like how we discussed before on the side route.
That's exactly what it is.
And over here, I'm just going to create a request and then this request, I'm actually going to tell
that.
All right.
This request, I need to reply with a different response, which I'm actually going to be looking for.
So I'm actually going to get this request and then I'm going to formulate the response that I wanted
to show to the people on the particular browser.
So this you can do using the response object.
And then there is something called as a send method, which will actually accept the fixture, something
like this, where you can actually specify the example Dages on file if you really want to do so.
This is another way of actually dealing with it.
So if I just save this, you can see that, oops, you get the same response coming up over here.
So probably I can just put this guy over there and let's try to reverse this or rerun this test again.
You should see that it's going to bring us the same data for us, which is quite nice.
Also, this is another way of actually doing things, or you can also do it in a very different way.
Instead of showing this just this particular fix or data, you can also show something like this.
I'm probably going to come under this particular code and I'm probably going to say request dot reply
where I'm actually going to tell that I wanted to show a body.
And this body is actually going to include what is called as probably like hacked something like that.
So as I do that, you can see that there is no contact list coming in, but actually this body has got
hacked in it.
So if I just do an inspect and if I do probably a Khan network and if I just tried to run this, you
can see that it shows all of them.
Let's go to the user.
You can see that this guy is just hacked over here.
So we are actually responding it based on what we are actually looking for.
So the intercept is actually very powerful then compared to the route itself.
And it is really, really cool to see that Cyprus has got a way around to work with it.
And you can intercept many different factions as well.
I mean, you can intercept based on the the header information, like you can just intercept just for
that particular header like authorization.
You can intercept just the authorization header and you can send the body that what we just saw in this
example over here, you can do that as well.
Or you can also play around with it.
Something like you can set some sort of an alias and then you can verify how you can grab these data
and see if those data are actually coming up once you perform a visit operation.
So these are other things that you can actually do over here and see if that works as well in Cyprus.
Next lecture, we can also discuss how we can perform some sort of Alia's like how we did over here
and see if that particular alias is returning or matching the value once we perform a visit operation.
