// Section 16: CI/CD with GitHub Actions and Cypress 4.9

Hey, guys, my name is Scott, and I'm from Mission dot com.
And welcome to another video for Indian robot emission testing, the Cypress Course.
And in this video, you then talk about Cypress Test execution in GitHub actions and published the report
to GetUp!
Pages.
So this is another way of working with Cypress Test execution on an continuous integration system.
And also, we can leverage the power of a up pages to published the report.
And we can see on line how the report is going to look like.
It's pretty cool and it could have actions, if you have not heard about have already called land video
on GitHub actions and how we can work with giddap actions and exceed automations.
Repo and GitHub actions is yet another popular SICAD tool for building and deploying applications right
from GetUp!
Just pretty cool as well.
So it is completely free.
You can give a Shahd and you can see how we can work with GitHub actions.
GitHub actions is all about the workforce and how you can create the workforce and how you can actually
execute applications.
It's pretty straightforward and pretty simple.
I have already discussed about it.
I can probably attest that video aspell in this particular section of this course, but yes, it is
already available in YouTube for free.
You can go ahead and watch from there.
So get up.
Action is pretty interesting.
We are going to see how we can run the Cyprus test with GitHub actions.
So not to run the Cyprus test with GitHub actions.
We are going to use the power of Cyprus Docker image.
So we have already discussed about Cyprus DOCKERTY measures and how we can execute the Cyprus within
Docker you maters and how we can generate the report and how we can get the videos and screenshot out.
We have already discussed about that in our earlier sections of this course, but this is pretty much
exactly where the idea is and we are going to leverage the same power with Cyberstalker within GitHub
actions of workflow.
So we are going to leverage the power in this particular video as well.
And then for Cyprus, reports we have already discussed about Cyprus reports like Mocho, awesome report
and also the Moka awesome merger report.
And we are going to leverage the same power here to generate that report and then merge them to a single
report so that you can see that particular report coming in in the GetUp pages.
So I've been talking about to get up pages.
So what is this get up peers and how we can actually published that report to the get up pages.
So get up pages are public web pages for users, organizations and repositories that are freely hosted
on GetUps GetUp dot org domain or on our custom domain name off your chai's.
Again, you need to be like a premium user for doing that, but for the free repo on GitHub, at least
one project, you can actually access it from the get her dot eyewear domain.
And that's what we're gonna be doing in this particular video.
And in order to publish that report to the GetUp pages, we actually require what is called RSA GitHub
actions.
So far doing that, we actually are going to use GitHub actions for GitHub pages.
It is sort of by one of the author.
I'm just gonna use it within my workflow.
Something like this.
So they have a detailed documentation.
You can go ahead and see.
They're like how we just been created.
It's pretty straightforward and easy.
Are you going to do is to go to a published directory and then the same published directory like Dark
Slash Public should be available within the mock RSA merge report so that you can actually get it from
there.
So this is what we are going to be basically doing for this particular video.
And finally, the up actions workflow for us is gonna look something like this.
As you can see, it has a branch that I'm looking for is just a massive branch.
And the job is the Cypress test, which is going to run on the chrome.
And then this can run only been two operating system.
And this is the container.
And there are some steps like you can directly check out the code and then you're going to run the cypress
and then verify it.
And then you would run the test of the Cyprus.
And then you can copy the execution videos as well as the screenshots.
And then you're gonna perform the Mirch test results and then you're gonna generate the Hesterman report.
And then you're going to deploy the pages to the GitHub actions to the GetUp pages where the workflow
that I showed you earlier.
So this is the whole workflow that we are going to be basically doing within this particular GitHub
actions, workflow, and also going into perform a small code, change something like this, because
this video needs to be associated and added as an context for the mock arson report that you can actually
see for each and every step.
This Brickner video is gonna pop up.
So we're gonna replace the Dart, JS Dart, whatever name it is followed.
You just gonna replace that two Dargis.
And then we're gonna use this particular video name within our video.
You are to be added as in context for the mock arson report.
That's it.
This is the only change.
End of the end of the day, the report is gonna look something like.
As you can see, there you are, all of this picture browser, it has it.
Is it automation dart.
GitHub dart.
I will slash Cyperus report.
So this is what it is.
So this is the report that will be generating.
And you can access that from your GitHub report itself, which is pretty insane.
It's really, really awesome.
And again, you can see that some of the flaws are the vote flaws asphalt's.
The publishing of the report to the GitHub pages are something which I have really got inspired from
post written by the author, as you can see here.
And this is the post link, if you like to read his article.
Just pretty cool and really inspired this post.
And I thought, why not just give a shout and create a video and then added, Nah, cause because this
is really, really important to see how great we can leverage the power of GitHub actions so quickly
to see everything in action and understand how things work so far that I'm gonna flip to my Windows
10 operating system right now.
All right.
So now I'm in my windows and operating system and I'm just gonna open my Windows terminal.
I'm going to quickly do some of the things which we already know and we have already discussed many
times so that I'm not really going to be wasting a lot of time on doing the same thing once again,
which is something that I'm just gonna create a directory and then I'm just going to create a basic
Cypress project.
And also I'm just gonna add some of the dependencies for the Mocca awesome report and the Cypress dependency
in the project.
And then we'll see how easily we can spin up and run some of that test.
And then we can add the project in the GitHub repo and then create a workflow and then run the workflow.
And we can see how the report is gonna be published and how the whole workflow is gonna to be to dub
actions.
Just pretty cool.
So we're gonna do the most Norn things pretty quickly so that the most anon thing was pretty new and
we have not discussed ever being around them a bit slower and then we'll understand how it actually
works.
And you can see that the latest version of Cyprus is now available for us.
So I'm just gonna close this guy because I'm not gonna use the dashboard right now.
And also because we have the Cyprus star Jason File.
We need to add some of the settings over here for our.
Awesome reporting.
So you feel already followed in my earlier sections of this particular cause there?
I have.
We have talked about the mock awesome reporter, so I'm just gonna do exactly the same thing.
I'm gonna add the reporter option.
And then we also need to add a few things on our script site over here to run the mock awesome itself.
But I'm not just gonna worry about it yet because I need to perform some other operation over here.
So what I'm going to do is just for the demonstration purpose.
I'm just gonna delete all these files over here.
And also, I'm going to do one more thing here.
I'm just going to reveal this guy in the Explorer.
Just gonna cut this paste it over here.
I remove the examples folder.
I'm just putting the speaker test file on the integration folder.
That's it.
And once we have everything or here, we are then going to run the test and we'll see how it actually
works.
So not far executing that test.
We already know that we have something called scripts.
Discussed about it, that we can actually specify what script that we are going to be executing.
For instance, if we need to run that test on a Chrome browser.
We can just perform that aspect.
So what I'm going to do is I'm just going to write a script here.
Is going to be test Colin Chrome because we don't run the test on the Chrome browser if we want to run
this in the Firefox browser.
We can specify that as well.
So it is going to be cyperus run off browser Chrome.
That's it.
I'm just going to say this guy and then I can just go to the command prompt or the terminal over here
and I can just do this not to run test column from Ops.
I just put no one here.
It should be NPM run test column chrome.
So once you do that, it is going to open the Chrome browser and then it's gonna run the test for us.
So basically not the Chrome browser.
So it's going to be running the Cypress test within the Chrome context.
That's it.
So this is the one way that we can actually run the test.
As you can see in here, it is opening the chrome for us.
And then it is around the test for us.
There you go.
So they just got executed.
And it's all done for us, just pretty cool.
And oh, we need to generate the Moka awesome report so far, generating the Mauga awesome report.
We all know that we need to run the Morganza merger report.
So I'm just going to run this frequent command to the up, merge after Marcos and report Dart, start
out Jaison and hyphen or index star Jason Fine.
So this way it is going to generate DeMarco as a merge report for us.
As you can see over here and then we need to actually merge that report.
So far doing that the command is this ENPI X off March and then the file does nothing but the indexed
artisan fight.
It is being generated and hyphen F and then oh, Moorcock reports.
So I'm just gonna do that.
And you can see that that report has been generated for us or here.
Now, if I go to this particular folder here, if I go to the reproductive schema, you can see that
I get these particular reports, which is pretty cool.
So this is the mock assembly report generation.
We already know that and we have already discussed about it.
But now let's say if I want to associate these videos on this particular report itself.
So in order to do that, the court, which I have shown you by the author, which is pretty cool and
very, very interesting, is to have just used his code.
It is really, really interesting.
And I feel like we need to really know about this.
So what I'm gonna do is I'm just gonna go to these supports of Indexed Start file.
And over here I need to add the context of this particular Moka awesome report.
And then we need to append this particular video.
Once the Destrehan is completely done so you can see that I'm just gonna call the Cyprus dot on of best
column after column drum, which means after the Koran has been committed by Cyprus, you then just
replace the name of the file.
I can see that it is action start Specter J start before.
So we just are going to replace Slashdot.
Start Darkstar.
Meaning it's going to replace the actions dart spec and then it's going to remove that our jails.
And then it's gonna just put the action star in before for us, which is pretty cool.
Right.
So once this is there, we can then associate this particular file to our assets.
Are the reporting so that the report will actually see that particular MP for File Aspell, which is
nothing but the video file aspect along with it.
So this is the power of this.
Of course, the impact is going to be basically doing it for us.
Well, now, as they've said now, I'm going to go all the way to my Pakistan Jason file over here.
And since we have this command and if you remember in our Elías sections of this course, we already
have discussed about the execution after Moka awesome report and Moka merger report on the combined
report and generated report option.
I'm going to do exactly the same thing this time as well.
So I'm just going to put them both over here so that we can actually see how we can combine the report
and generate the report.
So whatever command that I just executed over here, the same thing.
I'm just going to copy paste over here.
Except that you can see that for this particular report generation, I have actually generated that
in the public directory, which just nothing but the directory.
We need to be using for the GitHub pages because GitHub Betas actually is going to be located under
the public directory.
I need to specify the public directory over here for the assets.
And that report directly.
And then I'm going to keep a title for that particular report page because the published two GitHub
pages workflow actually requires a directory.
And this is the directive which I'm going to be specifying here.
That's it.
So this is the thing that I need to be making over here in this picture, of course, so that I can
actually checking this big record and I can see how it is going to actually work.
So what I'm going to do is I'm just gonna chicken this people piece of code into my GitHub repo and
then I'm gonna create a workflow from there and then we'll see how the report is going to be basically
generated.
So I'm gonna be using exactly the same syntax.
Is that what you have seen over here?
I'm just gonna put them on the GitHub workflow and then I'm going to create and work for them and see
how it can be done.
