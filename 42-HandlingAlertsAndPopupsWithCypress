So today we are going to be working with prompts and alerts in Cyprus.
Working with Alert's in Cyprus is as simple as working with Cyprus events are native Norges events,
as we discussed before, just nothing but the Cyprus on.
So as you can see, there are cases where we need to handle the alerts in our application and we need
to see how things work so we can do that much easily using the Cyprus events, something like Ciotat
on our Windows call on confirmation.
So the Windows confirmation is one more event handler which is used to confirm the event.
So if you say true, it is going to be confirming them.
And if you say false, which means you are rejecting the confirmation of the particular window so you
can perform all sorts of jobs using this particular event handler in Cyprus.
So we have already discussed about event handler in our previous videos while we were discussing with
File preprocessor of Cucumber and Browsr launch event.
And this is Windows confirmation event, which is another event to perform such an action in our application.
So let's quickly see everything in action and understand how things work so far that I'm not glued to
my item idy.
So I'm just going to open my item and then I need to open my application right now.
So I'm just going to go to the Udemy Cyprus and then institutionalists.
All right.
So KDA, I'm just going to do a courtyard to open my business studio called I guess all the installations
are sitting here so I don't really have to do the NPM install or something like that, which is cool.
So I have a node module.
So all I'm going to do is this time I'm going to be creating a new test file and I'm going to call this
as a demo app, dart spec Dargis.
So this time we are going to be using another application, which is our exit automation's demo applications,
where we can see how we can handle the alerts.
So I already have very, very basic nasti alert within the application.
So you can just queue at the username and password.
You can see that the password field is riveting, just kind of crazy.
But you can see that we have a JavaScript alert here.
Once I hit this generate, you can see there is an alert window coming.
It says that Extradimensional says you have to return an alert and if you hit cancel, it says you have
cancelled.
But in the same time, if you hit, OK, it's going to say you OK?
Right.
So you need to handle this kind of situation in your test.
There are many cases where some of the nasty applications can bring you this kind of problems, which
is kind of very, very hard these days.
No application actually brings these kinds of alerts, but there are cases where your application brings
this kind of situations you need to handle them.
So in order for this to be handled, we are going to be writing pretty much exactly the same kind of
code that we were doing all these days.
So just that this time I'm going to be doing some of the code which I have already written so that we
don't really have to do the same thing again and again.
So I'm just going to be doing here so you can see that it is going to be opening this particular website
and that is going to enter the user name and password is going to click that particular login and then
it's going to click the generate button.
So once it clicks that, then we're going to see a confirmation and then we're going to stop or just
execution.
So I'm just going to say this guy and let me open the Cyprus open here.
So I'm just going to do NPCs
Cyprus.
Open.
And now I'm going to run this a demo, Amdocs Dargis, and since we have already done the full screen
options, he's running in the full screen mode right now.
You can see the entrance, the username and password, and then the test actually fails.
So it says that it fails because the behavior is configurable and you can choose to turn off this by
listening the uncut exception event.
So basically, our event test card failed this time because we clicked that particular button generator
and it clicked this particular JavaScript alert and the OK, but we have not actually handled the window
confirmation event here.
So if we handle the situation, this kind of error will be gone.
And since we are not really handling the code yet, we are going to be getting this kind of error.
So just bear with me with this error for now.
We'll be fixing this error in a couple of minutes.
But you can see that we can see that the confirmation in the press is automatically handled by Cyprus.
Here.
I just click the generate button, as you can see in the code.
So let me close this guy.
And if I go to the code, I just click this particular button.
But the code automatically handled the two options, which is nothing.
But you see the JavaScript alert and then you click the confirmation there.
Right.
So this is something which is automatically happening within the Cyprus.
But we need to have a control of this particular event.
We need to see if we can control this particular event and see what's really happening.
So far doing that, I'm actually going to be calling our site out on where we can say I need to, uh,
handle this particular guy.
So you can see once I had window, it brings me that window dot confirmed, which is pretty cool.
And then I can say that I need to handle this guy.
So what I'm going to do is I'm just going to expect here that if the string to equal, uh, maybe you
generate, uh, JavaScript alert or something like that, and once you get this, you can return.
True.
So basically, if you say a return.
True.
Which means you're going to accept it.
So if you return falls means you are rejecting it.
So I'm just going to save this guy and then I'm going to run this a demo app once again.
There you go, and you can see that we have handled one alert, this guy, but we cannot handle the
OK button, so we need to handle that as well.
And we are still getting this kind of error.
So it says that it couldn't be able to handle this guy because we are not really handling that particular
event yet.
So in order to suppress this kind of event, that's what I was saying, that we're going to fix this
issue in a couple of minutes in order to suppress this particular event.
All you have to do is you're going to write one more event handler within your index Dargis file that
we are doing all these days before.
So I'm just going to go to the index Dargis file, which is pretty much the same thing that we discussed
in our previous video.
So let me go here next hour.
Charges file and within this, I'm going to call it one more event handler.
Uh, this time I'm just going to say on I'm going to say unclogged exception.
And I'm going to say it's, uh, it's a level so I'm not really going to do any sort of thing, but
rather I'm just going to run a false one out.
Right.
So this is to handle the error exception.
And this is for the browser launch and this is for cucumber that's going to say all these things.
And I'm going to open the.
Application, once again, the Cyprus, and now if I run this particular year demo app, hopefully this
time we will not see this particular exception that we are getting before.
So as you can see that the test is currently running, oops.
The error is still happening.
So let's see what's going on there.
So it's happening because we should not write the speaker on or here in the next hour.
JS file, as you can see here, it is still sitting in the plug in our next hour JS file.
So we are supposed to have this particular event handler, not in this area.
Rather, we should have this particular method in the index Dargis file over here.
So this is the place where you can put all your event handler to handle the exception so you can also
call the Cyprus dot on to perform this action.
Right.
So this way you can handle the exceptions of your application, pretty much like how you can do that
here.
So I'm just going to do a try again and I'm going to run this the demo app.
You can see that this time, hopefully.
There you go.
The TSA has got passed without any exception this time, right?
So this is how you going to handle the exceptions and this is how you're going to handle the alerts
as well.
So now let's say if I want to cancel the test, cancel the alert, I want to see if the cancel has been
triggered so I can just go to the demo app here.
And instead of running through, let's say if I run falls and if I go to the test and run the demo app
so you can see that it actually.
Show us your breast cancer instead of your breast, OK?
Right, so everything has been handled automatically and you can see even I can do the assertion within
the cord using this particular expect to be equal to this particular value.
So I say if I just remove this particular value, the wrong value, and now if I try to run this particular
test, you will be seeing an exception in the assertion saying that the value is not the one that you
are expecting.
You can see that you do that.
That is what is expected about what you're getting is not that one.
Right.
So you should be it should be correct as well.
So you can see that this particular modification is also happening within our alert and stuffs.
So this is another event handler that you can use to perform a confirmation action within your window.
Similarly, as bees are, you can perform other options like window launch, window A. and window alert
and things of that nature.
So all these steps you can do using these kinds of event handler within Cyprus.
So once again, thank goodness watching this video and have a great day.
