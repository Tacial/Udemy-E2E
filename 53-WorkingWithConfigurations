//Section 11: Working with Cypress Configurations for different...

So today, you know, we're into an automation testing in Cyprus course, we are going to be working
with Cyprus for a different environment configuration.
So this is one of the requests from students like you asking how to work with the different configurations
within Cyprus because there are cases while you work with Cyprus for different configurations and you
want to control the configuration in a better manner because each and every configuration is going to
have different neutrals.
And working with these are is going to be cumbersome because you've got to go and change those baozi.
You are a little bit in the Cyprus start on file to make the environment configuration changes.
And that's exactly going to be there for the secedes as well.
So for that, we are going to be discussing about environment configuration in this video environment.
Convocations are very helpful, especially for Testament's in more than one environment.
As I said before, for example, in an environment such as the Dove Kuai and staging environment are,
you may also have something like a pre Prader prod environment.
And if you want to run the test against those environment, it is highly important that you have control
over those environments and that's exactly will be doing in this particular video.
So we can achieve the environment configuration in Cyprus using what is called plug ins in Cyprus now
already discussed about Cyprus plug ins in our previous video to control the browser to maximize the
browser during the initial launch.
And we also set the preprocessor of the cucumber on the plugins file.
And we are going to be extending the exact same plug ins file for our configurations as well.
Plug ins, who can programmatically alter the result configurations and environment variables that come
from Cyprus to our Jasen Cyprus, Invitrogen, KELLYE system, environment, variables and stuff, so
you can just override all of them programmatically using the Cyprus configurations within plugin.
So this enables you to do the things like use multiple environments within their own configurations.
And that's exactly what we'll be doing in this area.
And swapping out the environment variables based on environment reading in the configuration files,
using the building first library and write your configuration in YAML.
So this library is what we'll be using for reading the file as well, because the jasen file is going
to be a file system and we need to use the first library or the file system library with the lawyers
to get the file details and use it for different environments.
So how are we going to achieve the configuration within our Cyprus code?
Well, are we going to do is this so we are going to write a function, something like this, like process
config name where we are going to be parsing in the configuration name.
So it's going to be pretty straightforward code and we'll be just calling this particular code within
our indexed ideas file of the plugin to make this thing happen.
And while we executed the Cyprus code within our command line, we are going to be passing this particular
EMV name is equal to depth.
Well, the hyphen hyphen envy's the environment of Cyprus, which is already supported by default.
And we are going to use the name variable, which is equal to Dev as the as the flag that will be using
for the configuration to be called within our site process.
Let's quickly see everything in action and understand how things work so far that I'm not to my item
terminal right now.
All right.
So now I am I Macarius and I'm going to open the item terminal and I'm going to navigate to the Udemy
Cyprus.
And then in here I'm going to open the windows to your code.
And then I'm going to start writing the code again, this is the same code that you have within the
reporting, so you can just get that particular code and then start working it from here.
All right.
So as I've said, what we're going to do is this for our configuration, as you can just go all the
way down to the Cyprus charges on file.
We have something called as a base you are, which we use in our previous videos of this course.
And this is basically something that we used within the E Abdah Specter just file.
If you remember where we passed the to visit off slash.
Well, the slash is actually mean.
You're going to visit exactly from the base.
You are alone.
So if you have a base, you are within the Cyprus orders and it is going to replace that file that you
are as this particular you are on.
Right.
So this is actually coming from this guy Cyprus to our design files because you are on variable.
Right?
So in order to replace this for each and every environment, let's say for the environment I have,
I have a different.
You are and for the test environment, development, environment, I have a different you are.
And for the staging environment, I have a different department.
So in order to override all those euros, I'm basically going to do exactly the same thing over here.
But just that I override the base.
You are from the Cyprus Dages and file within as configurations basically.
So in order for doing that, I'm just going to create a folder within the Cyprus and I'm going to call
this as maybe config.
I don't think this config I'm going to create a couple of files basically.
What is the Kuai Dart JS on file?
And another file is going to be the Div Dargis on the file and I have just copied the value from the
base.
You are.
So I'm just going to paste that over here.
So let's assume that for the environment.
I have got this particular URL and for the dev I actually am going to navigate to let's assume that
I'm going to navigate to a different website altogether.
Maybe that's a production Web site.
So I'm just going to call this as execute automation dot com.
I know this is wrong, but just for the time being, I'm just going to do a different.
You are.
And this is a configuration that I have passed in.
So now we had eye to configurations like Deve and Kuai, and we're going to be using this guys for the
baseball of our test that we have within the year apart.
Spectate just so for doing that, I'm just going to go to the plugins and the index dart JS file and
then in here I'm going to write the code for the reading of the files from the DOE.
And based on the configuration that I'm going to pass in so far doing that, I'm just going to write
two methods here basically.
And those two methods are the one which is going to be responsible for doing this operation.
So let's just come out here for this particular code and then I will write a function here and I'm going
to call this process config name.
And this paper process config name is going to take two values.
One is the on and we don't really require on yet, but I'm just going to take it for now and then I'm
just going to give the filename using the conf dot EMV dot name.
So this is the name which is going to be coming from the from the console that we're going to pass in
and then I'm going to return get config file where I'm just going to post a file and I'm just going
to resolve it basically.
And I'm just going to write, if I can think dot in v dot name.
Let's assume it's a pretty secure.
Then you can just return the file that base you are on, because I know there is a base.
You are all there.
You just copy paste that.
So I'm just going to take that one.
Dot based yoro press process dot EMV dot.
You are right.
So this is what is going to give us the particular Yahel and then we are going to return the fire.
So basically this is going to be returning as the complete file object while we just call this particular
method.
And then we have this to get config file method.
So basically, just get config file method is, again, one more function, which is going to do the
exact same operation.
So I'm just going to copy paste for now and then we're going to call this guy the process config name
within the written statement.
Basically we're going to pass it on and the config, because this is going to be running from this particular
model that export basically.
Right.
So this is going to be running as the configuration.
So this is the code.
Is this how the code is going to work?
And you can see the part that resolve is actually going to resolve the Cyprus and config and the file
charges on file, which is I think.
But they do.
Or whether they're going to be passing in.
And you can see that the path and the efforts are something which is not being resolved.
So basically, you need to call those two file directories over here so far doing that.
I'm just going to call the file system using the require extra.
And I also need to call one more package, which is going to be the part.
And this way I will have all of them, which I really require.
So let me quickly go through what we have did.
So we had just started the file system and this is the first extra and then the path.
And then we wrote this method of process config name to get the process name the process configuration
of the filing using this particular method and then make a return to specular filename over here.
So this is what this function is going to basically doing.
Hmm.
I see.
Like the sorry for that.
I just copy paste of this code that this code actually should be within over here.
We can also remove this if we want.
We probably don't really require this as of now.
I just remove this earlier why this is going to be used later and it's going to add this guy.
And just like the alignment and maybe we can do a format document here to do the alignment for us.
So this way it is going to tell us things and close this particular function.
There you go.
So now everything looks good to me.
So I'm just going to say this.
