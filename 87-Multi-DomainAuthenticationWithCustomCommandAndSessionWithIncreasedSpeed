All right.
In our last video, we saw how we got able to run two tests using the multi-domain workflow of automation.
And it was working pretty fine as expected.
But now that we are going to improve the test execution even further.
If you remember, we talked about the sessions of all the sidebar sessions earlier, sections of this
course, and we're gonna utilize the same operation over here to improve the test performance much,
much faster using this session.
But also we're going to improve this whole test experience as well.
And as you can see here, this whole core that we are writing, at least until here, the line number
37 from line number 28, we could able to just move them all to a custom command, which is nothing
but the sideboard commands over here.
We can put it over here to make our test more readable and easier and even faster to use across our
record.
So I'm going to be using this custom command operation of Cyprus, which is Cyprus Dart Command Dot
ad, where you can specify the custom command name.
So I'm going to say login and then I'm going to enter the user names, which is nothing but the email
as well as the password.
So I'm going to just do something like this.
And over here I'm going to add the code for performing the email address, entry and stuff.
But you know what?
I'm actually going to be cheating some of things.
I'm just going to copy this code, I'm going to pass it over here.
But instead of the cited origin, which is going to be accepting the email and the password, we are
going to be using another way to pass the email and password.
Just nothing but the args.
So this args is the one which is responsible for us to pass the email and the password.
But you will notice that I'm actually using an array type here.
The reason why we actually do this is because we are actually trying to serialize the value and then
we are going to be passing in like the email as well as the password, something like this.
So this is the serialization operation that I'm talking about.
So we need to do this way to pass this email and the password to see that this is what we should be
doing.
And once we have this, we can then pass the email here and the password here.
So we can try formatting this quite a bit.
Something like this.
So now it's more reliable for us.
Yeah.
And let's try formatting the document once again.
There you go.
Now, that's more better.
So this is the way that we could able to do it.
And once we login, I'm also going to verify if I have successfully logged in afterwards.
I'm just going to add one more line.
And this is basically for the Lambda test, really.
So the Lambda Test portal, I'm going to verify if I see a text containing manual testing in it.
That's it.
This is the one thing which I'm going to be doing.
So we have created a custom command this time, and once we have this custom command, we can then go
and replace some of the code that we have over here.
So basically, in fact, I can even cut this card.
I can go and paste it over here because I don't even have to visit it every time.
And now I'm just going to delete these codes just completely not required.
And also, I'm going to delete these lines of code that we already moved to the custom command.
So where do we call the custom command?
We are going to be doing it over here.
So I'm just going to call, log in.
And over here, I'm going to say my email ID and the password, something like this.
I'm just going to save it.
So now that I have actually used the custom command.
So let's see if that really happens.
You can see that Cyprus is doing for us behind the scene.
You see that it enters the username and password as well.
So it is basically working already.
So this authentication is really happening and both the test should be working for us as expected.
So this is another way of making our code even more better so that we don't really have to rely on just
like duplicating the code in two different places, we could be able to improve that.
But that's not just the improvement about using the custom commands.
We can even further customize this code or maybe improve the performance of the code even further using
the Cypress session.
Come in.
So if we just go back over here to our login method that we have.
We can just add one more line here, which is the side art session.
And on the side art session I can say email and password something like this, and I can then wrap this
whole cord over there, put it something like this, and let's format the document so you can see that
side.
Our session is going to do the same operational here, like logging into the website and then verifying
if I have logged in to the GitHub account and then verifying if I have logged into the lambda itself.
So this complete thing is going to be within a session this time.
And once I save this, you will see that the same test code that we were executing before is now executing
under a single session.
So see that there is a session object been created and within the session object it is passing in my
username, which is the email ready and the password.
And once it's done you will notice that the rest of the test will be much, much faster.
But it won't be there yet because within our test you'll see that we have actually not utilized the
power of the session itself anywhere.
We have not told, like from where we have to restore to go and click this particular dropdown.
And then we also have installed from where we have to do all these things.
What I'm going to say is I'm just going to navigate to this particular you are all the style dot visit
of the SDP detail slash profile sling because this is where the profile that I'm going to be verifying
is available.
So once I say this, you will see that the session is already have the object and you can see that it
is that this is oddity going to the profile, it's verifying the first test and it has already got passed.
And then it is also running the second test for me and then you will see that it is going to go on,
click the preferences tab and then it is going to verify if the preference has actually has got the
email in it.
So basically these two test are currently working for a super fast like 28 seconds.
So instead of like 58 seconds now the whole test is executing under 28 seconds.
Like almost like half the time we have reduced because we already have the sessions over here.
So now that our test is even more simpler, like it has a log in operation using the custom command
and also has got the direct.
You are told that we have to do these operations.
We can even in fact remove this dropdown clicking because we don't even have to do all these things.
All we have to do is just to go to that particular profile because we are already there in the profile
and also we can remove this two line at least.
Yeah, this is something we don't to be required.
Even this line is not required.
We can just click the preferences tab and verify.
So you see that.
Both these operations are going to be just taken care of.
So every time that even the logging operation is not even happening, it is just doing the intended
operation at this time.
Just going to go there and go to the preference and then verify.
I think it's going to be even more faster this time.
Next 16 seconds.
See, this is the targeted test that we can verify.
Instead of each and every time logging in and making our test more and more slower.
So from 62nd, at least 58/2, we have reduced our test to around 16/2.
So this is drastically improving the performance of our test.
And thanks to Cyprus session, as well as the origin operation that we have, which performs both the
MULTI-DOMAIN as well as the faster test operation overhead.
