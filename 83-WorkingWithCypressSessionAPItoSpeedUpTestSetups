// Section 21: Cypress 8.0 - Cypress Session API

Hi, guys, my name is Karthik and I'm from Misrata Automation Dotcom, and welcome to another video
for Internet automation in Cyprus course.
And in this day, we're talking about the all new feature released by Cyprus on Sadaat Session API.
So this is an experimental API and still in the XML session support flag, which means you need to enable
this as true in the Cyprus config file so that we can use this particular feature itself.
So let's quickly talk about this session API and why this is very, very interesting.
So if you go to this documentation of Seida session API, you will see that we could able to catch and
restore the cookie local storage and session storage in order to reduce the test setup time.
This is very important because every time while we run the test, we might need to login into our application
if we have a login operation on that, and then we need to perform certain actions based on the login
operation that we are doing in.
So, for example, if we need to access certain operation of our application, then we might need to
login into the application so that we could be able to perform certain actions on them.
And in order for certain test, if we need to log in each and every time, then we every time we need
to be logged into application and then we perform the intended action and then logging off the application
and again logging in to perform certain scenario operations.
So that's going to be really a time consuming process.
But if we could able to catch and restore these cookies, local storage and storage, which is used
by our application to store the credentials, then that will be awesome, because using these options,
we could reduce the number of times we are logging into the application itself.
So the test will be much faster.
So if you see in this particular application that we used to test within our core so far that year,
abdel-hamid our website every time, if you could see here before logging into this application, we
only have the employee list option and we don't have an option to create the employee, something like
that.
So every time for creating an employee, we need to login to this particular application using the username
and the password.
And you will see that there is two new items over here.
And once we go to the employee list, we have an option to create a new employee over here.
So this is all coming because the user is actually logged into the application and he could be able
to perform this action.
But let's assume that for testing like user creation and deleting the user, reading the user or something
like that, if we able to perform all these action every time, I need to log into this application
to perform that an action.
But if we could able to catch the session and the cookie information, then I don't have to necessarily
log in each and every time.
That way my test would be much, much faster.
So in order to use this feature, we need to be updating or upgrading our project with the latest version
of Cyprus, which is at least Cyprus ADR 2.0.
This is the latest version of Cyprus is actually a 3.0.
I have already installed the Cyprus Aidar plug in one of the template project.
And if you could see here the project packages on file to have these Cyprus 8R 3.0.
And you can also see that I have created a very, very super simple template structure of the test of
time when we're talking about and you can see that this test is very, very simple.
What it's doing is it's going to have a login operation which is actually wrapped in as a method over
here.
And then I'm passing in the username and password in the before each.
And this is the test, which is going to be running the test for us.
Again, this is generated by the Cyprus studio and I have not even written.
That's why you can see that the identifiers are quite crazy.
But yes, this is what it's going to be doing.
So let's try to run this particular test and I will show you what I really mean.
So if I just do an in Cyprus open, it is going to launch the Cyprus and I'm going to run the first
session to start spectate tests.
And you will see that the first test is actually running by doing a visit Operation of the Year after
Sami dot com website, and it's going to perform the login operation.
And then it it's got to navigate to all the links, which is available, like employer list, employee
details and manage user, that's it.
So this is the operation which is currently doing.
But let's say that our test actually has got to operation.
So let's say I have to do the same operation once again.
Uh, let's say I'm going to do like a second test over here.
So if I just say this test, you will see that I have first test and the second test.
So every time it is logging in and for the second test, actually it is just using the existing session.
So basically you should have clicked the log off operation.
But if it doesn't really do a log off, then it is going to use the existing session itself and then
it is performing the operation straightaway.
But let's add the logoff as well over here and you'll understand what I really mean.
So this is going to perform the log of most of this.
So I can see that logged in, performing the log off, and then it's going to log in once again and
then it is going to perform the action for us over here and then it is logging off.
So this is like a time consuming process, like because if I want to have like two test, then I need
to keep on doing the logging operation once again because it has logged off.
I'm just doing that again.
So it's going to be like a time consuming process.
But as I told you, the Cyprus new Seida session API, we could reduce this much, much further so we
can reduce the time itself.
So you can see that for running this test, it took like 12 seconds.
So far.
So let's see if we could reduce the time using the Sadaat session API.
So far doing that, I'm just going to go over here and then I'm just going to put Sadaat session.
And within this session I'm going to pass the name and the password, something like this.
And I'm just going to use the lambda expression over here.
And let's also try closing here.
And I'm just closing this particular log in as well, which is cool.
So now that I have just added the sidebar session, but as I told you, in order to use the the session,
we need to be enabling the experimental features within the Cyprus Dages on file.
So let me do that as well.
So I'm just going to save this.
And now let's see what happened to our test.
So if I try running the test, let's see what's basically going to happen.
So you will see that the first test is going to start running.
It's going to enter the username and password, as usual.
It's going to log in to perform the action.
And then for the second test, you can see that it is actually doing the same operation once again over
here.
But that's not the right way, right?
I mean, even though we to this session, it is doing exactly the same thing.
Why is that happening?
Well, it is happening for one of the important reason.
So if you use the Cyprus side session, we also need to tell that, all right, this is the consideration
that I have, that I have my session being stored and I'm going to be using the operation to navigate
to the different link within my test.
So I'm also assuming that the session is being stored here.
So which means I don't really have to necessarily log off each and every time.
Right.
Even though if I log of, let's say, let this log off, be available over there, I'm also going to
tell to the Cyprus that, hey, Cyprus, just go and visit for me the homepage like I'm logged in already,
something like that.
So just visit me in the home page so that I can keep looking into a log instead instead of in a log
off state.
So let's do this.
So I have just an the site to visit as the first command over here on that particular test.
And you will see that now the test is like running a bit more magical.
Did you see what happened, actually?
So let me try rewriting it again.
So the first time let me try closing this test, because that's not going to be clear.
Stop the test.
Not on this again.
You'll see that for the first test, it is going to perform a logging operation, which is quite normal.
And then for the second test, what it is going to do, it's not going to in again, rather it is just
performing the same operation, even though for the first it we did the log off.
The reason why it is actually happening is because it could be able to realize that, all right, this
session is already been logged in.
Why do I really need to log in, log in again?
Because there is a session information so I can directly use that.
So you see that for the first time it took like 20 seconds and now the time is just eight seconds.
The reason why this is happening is because it is using the session off that particular logged in state
and it works as expected.
So now our test is like at least two times faster than the actual test.
Like it's just taking like seven seconds compared to I think it was 20 seconds before.
So this is the way that we could actually improve the speed of the test.
And let's say I also have a test to perform like the create user operation.
So let's say I'm just going to put this guy here creating the user.
So if I just save this, you will see that it is going to do the same operation pretty faster, pretty
much like coming from the session information itself, which is quite good.
All right.
So this is how we could actually be able to work with the Cyprus using the Cyprus session API.
But now there is another way that you can use the Cyprus Section API instead of holding this like a
method or here we can also put it on the command, like Cyprus Command Site Command, which we already
discussed in our course.
So we can do that as well.
So all you need to do is just do something like Cyprus, start commands, dot add.
And you can see that my co-pilot is telling me exactly what I should be doing called.
And instead of the e-mail, I'm going to probably use the name and the password and let me copy paste
the code that I have written over here.
For the Cyprus session, and once I have this, I can then go back and I can just remove this card completely
and over here I can just to say dot login, which is going to perform the login operation, which I
have written on the command over here.
So let me say this and let's see what's going to happen.
Oops.
I think I have to remove this guy.
I don't know how it came through.
All right.
So now it is working fine as expected.
So this is how we could actually use this Iraj session, even in the command, and we could be able
to see that we could actually do a tremendous amount of speed in the test execution compared to not
having that particular feature within it.
So this guy is once again, thank goodness, watching this video.
And I hope you like the new feature of Cyprus.
