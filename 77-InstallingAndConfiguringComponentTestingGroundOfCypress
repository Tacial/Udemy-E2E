All right, so in this video, we are going to start working with the component testing of Cyprus,
the component destroyer, and we also see how we can integrate a react based application and perform
a component testing in Cyprus using the bundlers, which is available by Cyprus to integrate with the
REACT application.
And we already saw a quick demo in our last video.
So hopefully you've got an idea of what we're going to be doing in this particular video, and it is
that we are going to be discussing in this section.
All right.
So far, the demonstration purpose.
I'm actually going to be start creating a folder here and I'm going to call this as Cyprus component
demo.
And I'm just going to go to the Cyprus component demo and I'm going to open my visual studio code over
here and then I'm going to start creating the project.
So I'm just first going to create a package JS Jasen file.
And for the first time in this course, we are going to be using a yarn instead of the NPM just for
the change.
And so we we're going to be using TypeScript.
I mean, it doesn't matter like whatever language or superset that you really use to design your application.
It can be of any language, it can be a typescript or it can be a JavaScript or it can be of anything.
But we'll be just using TypeScript just for this particular demonstration of purpose and then I will
show you what I really mean.
So the first command I'm going to type is going to be the YAHN of Create React app.
So this is the application template that we are going to be using like a react app, and then we can
give you any name of our application that you really want to do, for example, cyperus demo test,
something like that.
And then I'm going to be using a template this time for TypeScript, something like this.
And once I hit enter, you will see that it is going to start creating all the packages for us over
here.
As you can see, there is a Cyprus demo test for coming in and it is also creating a John Locke file
there and it is adding all the different libraries and dependencies for us.
So this is basically creating a super simple application for us based on the template that we have given.
And you can see that they have given that this go to this particular folder like CD, Cyprus demo test,
and then you can start to run your application.
So I'm just going to go to this particular Cyprus demo test.
I'm going to do exactly the same thing like what they have told us to do.
So once I do this, you can start, you will see that there is going to be an application server running
for us, which is going to run this application for us.
So you can see that the application is actually coming, which is quite cool.
And you can also see that this particular applications code is actually sitting under the source folder
of the app, not the file.
And if you do any change over here, for example, there is a learn react.
And after that, if I try adding probably a paragraph like this, I say execute automation, react.
I demo something like this.
And once I do a control as like saying you can see that the hard reload will automatically add that
changes for us instantly.
So this is happening because of the hard reload and everything is already there and react.
And these are some of the features that will be actually using even our Cyprus testing.
And I will show you quickly, covid is going to be working for the component testing.
So everything is looking pretty good right now.
And all I want to do is I'm just going to go back to our terminal over here.
I'm just going to stop the application, which looks quite good for us.
And now I'm just going to start adding the Cyprus dependencies over here.
So for adding the Cyprus dependencies, all I'm gonna do is I'm just going to do once again yone of
add and then Cyprus add, Cyprus slash react.
So this is the package like add Cyprus last react is basically and package or Cyprus adapter, which
is going to be basically performing you like an intermediate to actually perform all the operations
for you, like intercepting the applications code and then working pretty much like a J Dom and things.
Not only this, we also require a back because without having a BIPAC, we can't really do anything
in terms of the application server that will be running.
So I'm just going to be installing a Web back and dev server and then I'm going to install this as a
dependency.
So once I do that, you will see that it is going to be adding the Cyprus for us on that particular
package, our jasen file.
So you can see that it is currently adding quite fastly for us.
And if we go to the package, our.
Is on file, you will see that we have the Cyprus React Webapp and Cyprus, and you can see that the
Cyprus version is version seven zero one.
So I'm recording this video.
It's already seven or one, not just seven.
So which is quite cool.
So now we have everything over here.
And the last thing which I'm going to be doing is I'm just going to open the Cyprus itself, like in
Cyprus, open the same exact command that we usually do.
So once I do that, it is going to start our Cyprus, which is going to be this one, as you can see,
and it is going to load all the test, which is going to be exactly the same thing, which usually happens.
And we know how these things are going to be working things.
And I'm not going to be talking about these things at the moment.
And even I'm not going to be talking about this a runner in this particular section, because this is
an Indian test runner and will not be using this Indian test runner.
Rather, we are actually going to be using the component test runner.
So I'm just going to close this guy would probably not even use this particular command in this whole
section.
And what is this?
Is there, as I told you, we are going to be start working with modifying the plugin file to talk with
the Web server.
And we will also need to modify Cyperus start Jasen file to locate the source folder, which will be
doing in our next lecture.
